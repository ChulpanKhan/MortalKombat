/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mortalkombat.Forms;

import com.mycompany.mortalkombat.WTF.Fight;
import com.mycompany.mortalkombat.WTF.Players.Human;
import com.mycompany.mortalkombat.WTF.Players.Player;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JProgressBar;

/**
 *
 * @author MyHuawei
 */
public class FightFrame extends javax.swing.JFrame {

    //private final Game game;
    private final Fight fight;
    private final Human human;
    private Player enemy;
    private ItemsDialog itemsDialog;
    /**
     * Creates new form FightFrame
     */
    public FightFrame(Fight fight) {
        this.fight = fight;
        human = fight.createNewHuman();
        enemy = fight.createNewEnemy();
        initComponents();
        updateNewRoundUI();
        setupHumanIcon();
    }

    private void setupHumanIcon() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/kitten.png"));
        Image image = icon.getImage();
        Image scaledImage = image.getScaledInstance(
                250, 250, Image.SCALE_SMOOTH
        );
        humanImgLabel.setIcon(new ImageIcon(scaledImage));
    }
    
    private void setupEnemyIcon() {
        String name = enemy.getName();
        String path = switch (name) {
            case "Baraka" -> "/images/Baraka.png";
            case "Sub-Zero" -> "/images/SubZero.png";
            case "Liu Kang" -> "/images/LiuKang.png";
            case "Sonya Blade" -> "/images/SonyaBlade.png";
            case "Shao Kahn" -> "/images/ShaoKahn.png";
            default -> "images/default.png";
        };

        enemyImgLabel.setIcon(new ImageIcon(getClass().getResource(path)));
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FightPanel = new javax.swing.JPanel();
        humanImgLabel = new javax.swing.JLabel();
        attackButton = new javax.swing.JButton();
        defendButton = new javax.swing.JButton();
        humanProgressBar = new javax.swing.JProgressBar();
        enemyImgLabel = new javax.swing.JLabel();
        enemyProgressBar = new javax.swing.JProgressBar();
        enemyNameLabel = new javax.swing.JLabel();
        enemyDamageTitleLabel = new javax.swing.JLabel();
        humanDamageTitleLabel = new javax.swing.JLabel();
        humanDamageValueLabel = new javax.swing.JLabel();
        enemyDamageValueLabel = new javax.swing.JLabel();
        humanLevelLabel = new javax.swing.JLabel();
        FightLabel = new javax.swing.JLabel();
        humanHealthLabel = new javax.swing.JLabel();
        enemyHealthLabel = new javax.swing.JLabel();
        experienceTitleLabel = new javax.swing.JLabel();
        scoreTitleLabel = new javax.swing.JLabel();
        experienceValueLabel = new javax.swing.JLabel();
        scoreValueLabel = new javax.swing.JLabel();
        enemyLevelLabel = new javax.swing.JLabel();
        turnStatusLabel = new javax.swing.JLabel();
        actionStatusLabel = new javax.swing.JLabel();
        humanNameLabel = new javax.swing.JLabel();
        stunStatusLabel = new javax.swing.JLabel();
        itemsButton = new javax.swing.JButton();
        currentLocationLabel = new javax.swing.JLabel();
        currentLocationValue = new javax.swing.JLabel();
        enemiesLeftInCurrentLocationLabel = new javax.swing.JLabel();
        enemiesLeftInCurrentLocationValue = new javax.swing.JLabel();
        debuffButton = new javax.swing.JButton();
        debufLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FightPanel.setBackground(new java.awt.Color(255, 255, 255));
        FightPanel.setPreferredSize(new java.awt.Dimension(1000, 700));

        attackButton.setBackground(new java.awt.Color(255, 0, 0));
        attackButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        attackButton.setText("Атаковать");
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });

        defendButton.setBackground(new java.awt.Color(255, 204, 0));
        defendButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        defendButton.setText("Защититься");
        defendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defendButtonActionPerformed(evt);
            }
        });

        humanProgressBar.setBackground(new java.awt.Color(204, 204, 204));
        humanProgressBar.setForeground(new java.awt.Color(51, 255, 51));
        humanProgressBar.setMaximum(80);
        humanProgressBar.setMinimum(-1);

        enemyProgressBar.setBackground(new java.awt.Color(204, 204, 204));
        enemyProgressBar.setForeground(new java.awt.Color(0, 255, 0));
        enemyProgressBar.setMinimum(-1);

        enemyNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        enemyNameLabel.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N

        enemyDamageTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyDamageTitleLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        enemyDamageTitleLabel.setText("Damage");

        humanDamageTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        humanDamageTitleLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        humanDamageTitleLabel.setText("Damage");

        humanDamageValueLabel.setBackground(new java.awt.Color(255, 255, 255));
        humanDamageValueLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        humanDamageValueLabel.setForeground(new java.awt.Color(255, 0, 0));
        humanDamageValueLabel.setText("16");

        enemyDamageValueLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyDamageValueLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        enemyDamageValueLabel.setForeground(new java.awt.Color(255, 0, 0));
        enemyDamageValueLabel.setText("16");

        humanLevelLabel.setBackground(new java.awt.Color(255, 255, 255));
        humanLevelLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        humanLevelLabel.setText("0 уровень");

        FightLabel.setBackground(new java.awt.Color(255, 255, 255));
        FightLabel.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        FightLabel.setForeground(new java.awt.Color(0, 0, 153));
        FightLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FightLabel.setText("FIGHT");
        FightLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        humanHealthLabel.setBackground(new java.awt.Color(255, 255, 255));
        humanHealthLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        humanHealthLabel.setForeground(new java.awt.Color(102, 102, 102));
        humanHealthLabel.setText("80/80");

        enemyHealthLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyHealthLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        enemyHealthLabel.setForeground(new java.awt.Color(102, 102, 102));
        enemyHealthLabel.setText("80/80");

        experienceTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        experienceTitleLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        experienceTitleLabel.setForeground(new java.awt.Color(128, 92, 31));
        experienceTitleLabel.setText("experience");

        scoreTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        scoreTitleLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        scoreTitleLabel.setForeground(new java.awt.Color(128, 92, 31));
        scoreTitleLabel.setText("points");

        experienceValueLabel.setBackground(new java.awt.Color(255, 255, 255));
        experienceValueLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        experienceValueLabel.setForeground(new java.awt.Color(113, 90, 16));
        experienceValueLabel.setText("0/40");

        scoreValueLabel.setBackground(new java.awt.Color(255, 255, 255));
        scoreValueLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        scoreValueLabel.setForeground(new java.awt.Color(113, 90, 16));
        scoreValueLabel.setText("00");

        enemyLevelLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyLevelLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        enemyLevelLabel.setText("1 уровень");

        turnStatusLabel.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        turnStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        actionStatusLabel.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        actionStatusLabel.setForeground(new java.awt.Color(204, 0, 0));
        actionStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        humanNameLabel.setFont(new java.awt.Font("Copperplate Gothic Light", 2, 14)); // NOI18N
        humanNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        humanNameLabel.setText("Kitten");

        stunStatusLabel.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        stunStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        itemsButton.setBackground(new java.awt.Color(174, 183, 106));
        itemsButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        itemsButton.setText("Предметы");
        itemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsButtonActionPerformed(evt);
            }
        });

        currentLocationLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        currentLocationLabel.setText("Current location:");

        currentLocationValue.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        currentLocationValue.setText("0");

        enemiesLeftInCurrentLocationLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        enemiesLeftInCurrentLocationLabel.setText("Enemies left in current location:");

        enemiesLeftInCurrentLocationValue.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        enemiesLeftInCurrentLocationValue.setText("0");

        debuffButton.setBackground(new java.awt.Color(137, 145, 255));
        debuffButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        debuffButton.setText("Ослабить");
        debuffButton.setPreferredSize(new java.awt.Dimension(92, 25));
        debuffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debuffButtonActionPerformed(evt);
            }
        });

        debufLabel.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        debufLabel.setForeground(new java.awt.Color(102, 102, 255));
        debufLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout FightPanelLayout = new javax.swing.GroupLayout(FightPanel);
        FightPanel.setLayout(FightPanelLayout);
        FightPanelLayout.setHorizontalGroup(
            FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FightPanelLayout.createSequentialGroup()
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(enemyLevelLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(enemyHealthLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FightPanelLayout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(FightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(experienceTitleLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addComponent(enemyProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(FightPanelLayout.createSequentialGroup()
                                                .addGap(92, 92, 92)
                                                .addComponent(scoreTitleLabel))
                                            .addGroup(FightPanelLayout.createSequentialGroup()
                                                .addGap(111, 111, 111)
                                                .addComponent(scoreValueLabel)
                                                .addGap(108, 108, 108)
                                                .addComponent(experienceValueLabel))))
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addComponent(enemyDamageTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(enemyDamageValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FightPanelLayout.createSequentialGroup()
                                        .addComponent(enemyNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(itemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6))
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addComponent(enemyImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(FightPanelLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(actionStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(FightPanelLayout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(debufLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(stunStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                                        .addComponent(turnStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(21, 21, 21)))))))
                                .addGroup(FightPanelLayout.createSequentialGroup()
                                    .addComponent(enemiesLeftInCurrentLocationLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(enemiesLeftInCurrentLocationValue, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(264, 264, 264)))
                            .addGroup(FightPanelLayout.createSequentialGroup()
                                .addComponent(currentLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentLocationValue, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FightPanelLayout.createSequentialGroup()
                                .addGap(247, 247, 247)
                                .addComponent(humanLevelLabel))
                            .addGroup(FightPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(FightPanelLayout.createSequentialGroup()
                                                .addComponent(humanProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(humanHealthLabel))
                                            .addGroup(FightPanelLayout.createSequentialGroup()
                                                .addComponent(humanDamageTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(humanDamageValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(45, 45, 45))
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addComponent(humanNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(144, 144, 144))
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addComponent(humanImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68))
                                    .addGroup(FightPanelLayout.createSequentialGroup()
                                        .addComponent(debuffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(attackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(defendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        FightPanelLayout.setVerticalGroup(
            FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(humanProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(enemyProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(FightPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(humanHealthLabel))
                            .addComponent(enemyHealthLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(experienceTitleLabel)
                            .addComponent(scoreTitleLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(experienceValueLabel)
                            .addComponent(scoreValueLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(humanDamageTitleLabel)
                    .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enemyDamageTitleLabel)
                        .addComponent(enemyDamageValueLabel)
                        .addComponent(humanDamageValueLabel)))
                .addGap(27, 27, 27)
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FightPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(humanLevelLabel)
                            .addComponent(actionStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(FightPanelLayout.createSequentialGroup()
                                .addComponent(turnStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(stunStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(debufLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(humanImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enemyLevelLabel)
                            .addComponent(enemyImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addComponent(enemyNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentLocationLabel)
                            .addComponent(currentLocationValue)))
                    .addGroup(FightPanelLayout.createSequentialGroup()
                        .addComponent(humanNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(defendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(attackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(debuffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemiesLeftInCurrentLocationLabel)
                    .addComponent(enemiesLeftInCurrentLocationValue))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(FightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 669, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
        performFightTurn(1);
    }//GEN-LAST:event_attackButtonActionPerformed

    private void defendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defendButtonActionPerformed
        performFightTurn(0);
    }//GEN-LAST:event_defendButtonActionPerformed
      
    private void itemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsButtonActionPerformed
        itemsDialog = new ItemsDialog(this, rootPaneCheckingEnabled, human);
        itemsDialog.setVisible(true);
        itemsDialog.setBounds(300, 200, 430, 350);
    }//GEN-LAST:event_itemsButtonActionPerformed

    private void debuffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debuffButtonActionPerformed
        performFightTurn(2);
    }//GEN-LAST:event_debuffButtonActionPerformed

    private void performFightTurn(int attackType) {
        fight.hit(human, enemy, attackType);
        updateNewRoundUI();

        //Проверка на завершение раунда
        if (human.getHealth() <= 0 || enemy.getHealth() <= 0) {
            RoundResultDialog resultDialog = new RoundResultDialog(this, rootPaneCheckingEnabled);
            resultDialog.setResultLabel(fight.getFightResult());
            resultDialog.setVisible(rootPaneCheckingEnabled);
            updateNewRoundUI();
            if (fight.isOver()) {
                dispose();
                if (human.inTop10()) {
                    WinDialog winDialog = new WinDialog(this, rootPaneCheckingEnabled, fight, human);
                    winDialog.setVisible(rootPaneCheckingEnabled);
                } else {
                    EndGameDialog endGame = new EndGameDialog(this, rootPaneCheckingEnabled);
                    endGame.setVisible(rootPaneCheckingEnabled);
                }
            } else if (human.justLeveledUp()) {
                LevelUpDialog levelUpDialog = new LevelUpDialog(this);
                levelUpDialog.setLocationRelativeTo(this);
                levelUpDialog.setVisible(true);
                //бонус
                fight.getAction().scaleHuman(human, levelUpDialog.isIncreaseHealth());
                updateNewRoundUI();
            }
            enemy = fight.newRound(human);
            updateNewRoundUI();
        }
        updateNewRoundUI();

    }

    private void updateLocation() {
        currentLocationValue.setText(String.valueOf(fight.getCurrentLocation()));
        enemiesLeftInCurrentLocationValue.setText(String.valueOf(1 + fight.getLocation().getEnemiesLeftInCurrentLocation()));
    }

    public void updateRoundHealth(int attackType) {
        updateHealth(enemy, enemyHealthLabel, enemyProgressBar);
        updateHealth(human, humanHealthLabel, humanProgressBar);
        updateTurnLabel();
    }

    public void updateHealth(Player player, JLabel label, JProgressBar bar) {
        int health = Math.max(player.getHealth(), 0);
        label.setText(health + "/" + player.getMaxHealth());
        bar.setMaximum(player.getMaxHealth());
        bar.setValue(player.getHealth());
    }

    private void updateTurnLabel() {
        int roundCounter = fight.getRoundCounter();
        if (roundCounter % 2 == 1) {
            turnStatusLabel.setText("Your turn");
            debuffButton.setEnabled(true);
        } else {
            debuffButton.setEnabled(false);
            turnStatusLabel.setText(enemy.getName() + "'s turn");
        }
    }

    private void updateNewRoundUI() {
        scoreValueLabel.setText(String.valueOf(human.getPoints()));
        experienceValueLabel.setText(human.getExperience() + "/" + human.getNextExperience());
        humanLevelLabel.setText(human.getLevel() + " level");
        enemyLevelLabel.setText(enemy.getLevel() + " level");
        enemyNameLabel.setText(enemy.getName());
        actionStatusLabel.setText(fight.getActionStatus());
        stunStatusLabel.setText(fight.getStunStatus());
        enemyDamageValueLabel.setText(String.valueOf(enemy.getDamage()));
        debufLabel.setText(fight.getDebufStatus());
        updateTurnLabel();
        setupEnemyIcon();

        updateHealth(enemy, enemyHealthLabel, enemyProgressBar);
        updateHealth(human, humanHealthLabel, humanProgressBar);
        humanDamageValueLabel.setText(String.valueOf(human.getDamage()));

        updateLocation();
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FightLabel;
    private javax.swing.JPanel FightPanel;
    private javax.swing.JLabel actionStatusLabel;
    private javax.swing.JButton attackButton;
    private javax.swing.JLabel currentLocationLabel;
    private javax.swing.JLabel currentLocationValue;
    private javax.swing.JLabel debufLabel;
    private javax.swing.JButton debuffButton;
    private javax.swing.JButton defendButton;
    private javax.swing.JLabel enemiesLeftInCurrentLocationLabel;
    private javax.swing.JLabel enemiesLeftInCurrentLocationValue;
    private javax.swing.JLabel enemyDamageTitleLabel;
    private javax.swing.JLabel enemyDamageValueLabel;
    private javax.swing.JLabel enemyHealthLabel;
    private javax.swing.JLabel enemyImgLabel;
    private javax.swing.JLabel enemyLevelLabel;
    private javax.swing.JLabel enemyNameLabel;
    private javax.swing.JProgressBar enemyProgressBar;
    private javax.swing.JLabel experienceTitleLabel;
    private javax.swing.JLabel experienceValueLabel;
    private javax.swing.JLabel humanDamageTitleLabel;
    private javax.swing.JLabel humanDamageValueLabel;
    private javax.swing.JLabel humanHealthLabel;
    private javax.swing.JLabel humanImgLabel;
    private javax.swing.JLabel humanLevelLabel;
    private javax.swing.JLabel humanNameLabel;
    private javax.swing.JProgressBar humanProgressBar;
    private javax.swing.JButton itemsButton;
    private javax.swing.JLabel scoreTitleLabel;
    private javax.swing.JLabel scoreValueLabel;
    private javax.swing.JLabel stunStatusLabel;
    private javax.swing.JLabel turnStatusLabel;
    // End of variables declaration//GEN-END:variables
}
