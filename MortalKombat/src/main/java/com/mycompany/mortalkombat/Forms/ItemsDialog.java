/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.mortalkombat.Forms;

import com.mycompany.mortalkombat.WTF.Fight;
import com.mycompany.mortalkombat.WTF.Items;
import com.mycompany.mortalkombat.WTF.ItemsStorage;
import com.mycompany.mortalkombat.WTF.Players.Human;
import com.mycompany.mortalkombat.WTF.Players.Player;

/**
 *
 * @author MyHuawei
 */
public class ItemsDialog extends javax.swing.JDialog {
    private final Fight fight = new Fight();
    private Human human;
    private Player enemy;
    private final Items[] items = ItemsStorage.getItems();

    /**
     * Creates new form ItemsDialog
     */
    public ItemsDialog(java.awt.Frame parent, boolean modal, Human human) {
        super(parent, modal);
        initComponents();
        this.human = human;
        updateItemButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemsPanel = new javax.swing.JPanel();
        itemsLabel = new javax.swing.JLabel();
        smallPotionRadioButton = new javax.swing.JRadioButton();
        bigPotionRadioButton = new javax.swing.JRadioButton();
        rebirthCrossRadioButton = new javax.swing.JRadioButton();
        useItemButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        itemsPanel.setBackground(new java.awt.Color(190, 182, 135));

        itemsLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        itemsLabel.setForeground(new java.awt.Color(51, 51, 51));
        itemsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemsLabel.setText("Мешок предметов");

        smallPotionRadioButton.setBackground(new java.awt.Color(190, 182, 135));
        smallPotionRadioButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        smallPotionRadioButton.setText("Малое зелье лечение, 0 шт");
        smallPotionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallPotionRadioButtonActionPerformed(evt);
            }
        });

        bigPotionRadioButton.setBackground(new java.awt.Color(190, 182, 135));
        bigPotionRadioButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        bigPotionRadioButton.setText("Большое зелье лечение, 0 шт");
        bigPotionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigPotionRadioButtonActionPerformed(evt);
            }
        });

        rebirthCrossRadioButton.setBackground(new java.awt.Color(190, 182, 135));
        rebirthCrossRadioButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        rebirthCrossRadioButton.setText("Крест возрождения, 0 шт");
        rebirthCrossRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rebirthCrossRadioButtonActionPerformed(evt);
            }
        });

        useItemButton.setBackground(new java.awt.Color(239, 237, 14));
        useItemButton.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        useItemButton.setText("Использовать");
        useItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemsPanelLayout = new javax.swing.GroupLayout(itemsPanel);
        itemsPanel.setLayout(itemsPanelLayout);
        itemsPanelLayout.setHorizontalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemsPanelLayout.createSequentialGroup()
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemsPanelLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bigPotionRadioButton)
                            .addComponent(rebirthCrossRadioButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(smallPotionRadioButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(itemsPanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(useItemButton)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        itemsPanelLayout.setVerticalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemsPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(itemsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(smallPotionRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bigPotionRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rebirthCrossRadioButton)
                .addGap(50, 50, 50)
                .addComponent(useItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void smallPotionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallPotionRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smallPotionRadioButtonActionPerformed

    private void bigPotionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigPotionRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bigPotionRadioButtonActionPerformed

    private void useItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useItemButtonActionPerformed
        int selectedIndex = -1;
        if (smallPotionRadioButton.isSelected()) selectedIndex = 0;
        else if (bigPotionRadioButton.isSelected()) selectedIndex = 1;
        else if (rebirthCrossRadioButton.isSelected()) selectedIndex = 2;
        
        if (items[selectedIndex].getCount() <= 0) {         
            CannotUseItemDialog errorDialog = new CannotUseItemDialog();
            errorDialog.setVisible(true);
            errorDialog.setBounds(300, 200, 400, 300);
        } else {
            fight.getAction().useItem(enemy, items, selectedIndex);
        }
        
        updateItemButtons();
        dispose();
    }//GEN-LAST:event_useItemButtonActionPerformed

    private void rebirthCrossRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rebirthCrossRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rebirthCrossRadioButtonActionPerformed

    public void updateItemButtons() {
        smallPotionRadioButton.setText(items[0].getName() + ", " + items[0].getCount() + " шт");
        bigPotionRadioButton.setText(items[1].getName() + ", " + items[1].getCount() + " шт");
        rebirthCrossRadioButton.setText(items[2].getName() + ", " + items[2].getCount() + " шт");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bigPotionRadioButton;
    private javax.swing.JLabel itemsLabel;
    private javax.swing.JPanel itemsPanel;
    private javax.swing.JRadioButton rebirthCrossRadioButton;
    private javax.swing.JRadioButton smallPotionRadioButton;
    private javax.swing.JButton useItemButton;
    // End of variables declaration//GEN-END:variables
}
